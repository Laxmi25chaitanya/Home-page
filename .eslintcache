[{"C:\\Users\\MU20182387\\Documents\\Charan\\React\\optima\\src\\index.js":"1","C:\\Users\\MU20182387\\Documents\\Charan\\React\\optima\\src\\reportWebVitals.js":"2","C:\\Users\\MU20182387\\Documents\\Charan\\React\\optima\\src\\App.js":"3","C:\\Users\\MU20182387\\Documents\\Charan\\React\\optima\\src\\Components\\Financials.jsx":"4","C:\\Users\\MU20182387\\Documents\\Charan\\React\\optima\\src\\Components\\DebitHover.jsx":"5","C:\\Users\\MU20182387\\Documents\\Charan\\React\\optima\\src\\Components\\CreditHover.jsx":"6"},{"size":563,"mtime":1612338696803,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":2102,"mtime":1613459718626,"results":"10","hashOfConfig":"8"},{"size":9174,"mtime":1613459718683,"results":"11","hashOfConfig":"8"},{"size":1347,"mtime":1613459718680,"results":"12","hashOfConfig":"8"},{"size":2279,"mtime":1613459718677,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1n2n4se",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\MU20182387\\Documents\\Charan\\React\\optima\\src\\index.js",[],["30","31"],"C:\\Users\\MU20182387\\Documents\\Charan\\React\\optima\\src\\reportWebVitals.js",[],"C:\\Users\\MU20182387\\Documents\\Charan\\React\\optima\\src\\App.js",[],"C:\\Users\\MU20182387\\Documents\\Charan\\React\\optima\\src\\Components\\Financials.jsx",["32"],"import React, { Component } from \"react\";\r\nimport udata from \"../userdata.json\";\r\nimport DebitHover from \"./DebitHover\";\r\nimport { GoArrowRight } from \"react-icons/go\";\r\nimport { GoGraph } from \"react-icons/go\";\r\nimport { BsFillInfoCircleFill } from \"react-icons/bs\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport CreditHover from \"./CreditHover\";\r\nclass Financials extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state =\r\n    {\r\n      debit: [],\r\n      credit: []\r\n    };\r\n    this.getDebitData = this.getDebitData.bind(this);\r\n    this.getCreditData = this.getCreditData.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    var getDebitVal = await this.getDebitData();\r\n    var getCreditVal = await this.getCreditData();\r\n    this.setState({ debit: getDebitVal, credit: getCreditVal });\r\n  }\r\n\r\n  async getDebitData() {\r\n    const response = await fetch('http://localhost:8000/debit');\r\n    const json = await response.json();\r\n    return json;\r\n  }\r\n  async getCreditData() {\r\n    const response = await fetch('http://localhost:8000/credit');\r\n    const json = await response.json();\r\n    return json;\r\n  }\r\n\r\n  render() {\r\n    if (this.state.debit[0] && this.state.credit[0]) {\r\n      return (\r\n        <div>\r\n          <div className=\"main\">\r\n            <div className=\"main-left\">\r\n              <div>\r\n                <h2>&nbsp;&nbsp;&nbsp;My Financials</h2>\r\n              </div>\r\n              <div className=\"main-left-top\">\r\n                <div className=\"mltone\">\r\n                  <span>Debit accounts</span>\r\n                  <br />\r\n                  <span className=\"tdi-digits\">{udata.noOfDebitAccounts}</span>\r\n                  <br />\r\n                  <span>Credit accounts</span>\r\n                  <br />\r\n                  <span className=\"tdi-digits\">{udata.noOfCreditAccounts} </span>\r\n                  <br />\r\n                </div>\r\n                <div className=\"vertical\"></div>\r\n                <div className=\"mlttwo\">\r\n                  <span>Debit balance</span>\r\n                  <br />\r\n                  <span className=\"tdi-digits\">\r\n                    &#8356; {udata.totalAvailableDebitBalance}\r\n                  </span>\r\n                  <br />\r\n                  <span>Credit Outstanding</span>\r\n                  <br />\r\n                  <span className=\"tdi-digits\">\r\n                    &#8356; {udata.totalAvailableCreditBalance}\r\n                  </span>\r\n                  <br />\r\n                </div>\r\n                <div className=\"vertical\"></div>\r\n\r\n                <div className=\"mltthree\">\r\n                  <p id=\"mltthree-text\">\r\n                    Looking for best option to maximize your savings and optimise\r\n                    your expenses\r\n                </p>\r\n                  <button className=\"btn btn-success btn-xs\">\r\n                    {\" \"}\r\n                  &nbsp;&nbsp;Yes&nbsp;\r\n                  <GoArrowRight className=\"yesarrow\" />\r\n                  &nbsp;\r\n                </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"main-left-bottom\">\r\n                <div className=\"main-left-bottom-left\">\r\n                  <div className=\"inner-head\">\r\n                    <div\r\n                      style={{\r\n                        fontSize: \"Larger\",\r\n                        fontWeight: \"bold\",\r\n                        marginLeft: 0,\r\n                      }}\r\n                    >\r\n                      <span>Debit Accounts</span>\r\n                    </div>\r\n                    <div>\r\n                      <button className=\"btn  \">\r\n                        <GoGraph />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {\r\n                    this.state.debit[0].banks.map((bank, index) => {\r\n                      return (<div\r\n                        className=\"inner\"\r\n                        data-tip=\"tooltip\"\r\n                        data-for={\"debit_\" + bank.bankId}\r\n                        data-effect=\"solid\"\r\n                        data-background-color=\"white\"\r\n                      >\r\n                        <div className=\"inner-one\">\r\n                          <div className=\"cardimage\">\r\n\r\n                            <img src={`./assets/${bank.cardimage}`} alt=\"Halifax@2x\"\r\n                              height=\"50px\"></img>\r\n                          </div>\r\n                          <div>\r\n                            {bank.bankName}\r\n                            <br />\r\n                            <span className=\"intRate\">\r\n                              {bank.accounts[0].interestRate}\r\n                      &#37;&nbsp;AER\r\n                    </span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"inner-two\">\r\n                          {bank.accounts[0].accountType}\r\n                  &nbsp;|&nbsp;&#8356;{bank.accounts[0].balance}\r\n                        </div>\r\n                        <ReactTooltip id={\"debit_\" + bank.bankId}>\r\n                          <DebitHover id={bank.bankId} bankdetails={bank} />\r\n                        </ReactTooltip>\r\n                      </div>\r\n                      )\r\n                    }\r\n                    )\r\n                  }\r\n                  <div className=\"inner just-for-flex-purpose\"></div>\r\n                </div>\r\n\r\n                <div className=\"main-left-bottom-right\">\r\n                  <div className=\"inner-head\">\r\n                    <div\r\n                      style={{\r\n                        fontSize: \"Larger\",\r\n                        fontWeight: \"bold\",\r\n                        marginLeft: 0,\r\n                      }}\r\n                    >\r\n                      <span>Credit Accounts</span>\r\n                    </div>\r\n                    <div>\r\n                      <button className=\"btn  \">\r\n                        <GoGraph />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {\r\n                    this.state.credit[0].banks.map((bank, index) => {\r\n                      return (\r\n                        <div className=\"inner\" data-tip=\"tooltip\"\r\n                          data-for={\"credit_\" + bank.bankId}\r\n                          data-effect=\"solid\"\r\n                          data-background-color=\"white\">\r\n                          <div className=\"inner-one\">\r\n                            <div className=\"cardimage\">\r\n                              <img src={`./assets/${bank.cardimage}`} alt={bank.bankName}\r\n                                height=\"50px\"></img>\r\n                            </div>\r\n                            <div>\r\n                              {bank.bankName}\r\n                              <br />\r\n                              <span className=\"intRate\">\r\n                                {bank.accounts[0].apr || bank.accounts[0].interestRate}\r\n                        &#37;&nbsp;APR\r\n                      </span>\r\n                              <br />\r\n                              <span style={{ color: \"rgb(255,93,100)\" }}>\r\n                                <BsFillInfoCircleFill />\r\n                              </span>\r\n                              <span>\r\n                                {(eval(bank.accounts[0].dueDate) -\r\n                                  new Date().setDate(new Date().getDate())) /\r\n                                  86400000}\r\n                        Days\r\n                      </span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"inner-two\">\r\n                            {bank.accounts[0].accountType}\r\n                    &nbsp;|&nbsp;&#8356;\r\n                    {bank.accounts[0].totalBalanceDue}\r\n                          </div>\r\n                          <ReactTooltip id={\"credit_\" + bank.bankId}>\r\n                            <CreditHover id={bank.bankId} bankdetails={bank} />\r\n                          </ReactTooltip>\r\n                        </div>\r\n                      )\r\n                    }\r\n                    )\r\n                  }\r\n                  <div className=\"inner-opt-button\">\r\n                    <div>\r\n                      <button className=\"btn btn-success btn-lg\">\r\n                        Optimize&nbsp;\r\n                      <GoArrowRight className=\"optimizearrow\" />{\" \"}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"main-right\">\r\n              <img src=\"./assets/imgone.png\" alt=\"\" className=\"image\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"livechat\">\r\n            <img src=\"./assets/livechat.png\" alt=\"\" height=\"60px\" width=\"60px\" />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (<h1  >\r\n\r\n        <span className=\" text-muted\" style={{\r\n          fontSize: \"80px\",\r\n          color: \"black\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}>Loading..</span>\r\n      </h1>)\r\n    }\r\n\r\n  }\r\n}\r\nexport default Financials;\r\n","C:\\Users\\MU20182387\\Documents\\Charan\\React\\optima\\src\\Components\\DebitHover.jsx",[],["33","34"],"C:\\Users\\MU20182387\\Documents\\Charan\\React\\optima\\src\\Components\\CreditHover.jsx",["35"],"import React, { Component } from 'react';\r\nclass CreditHover extends Component {\r\n  state = {}\r\n\r\n\r\n\r\n  render() {\r\n    let minbalance, showdue;\r\n    if (this.props.bankdetails.accounts[0].minBalanceDue) {\r\n      minbalance = <MinBalanceExist bank={this.props.bankdetails.accounts[0]}></MinBalanceExist>\r\n      showdue = <ShowMinDue bank={this.props.bankdetails.accounts[0]}></ShowMinDue>\r\n    } else {\r\n      minbalance = <MinBalanceNotExist bank={this.props.bankdetails.accounts[0]}></MinBalanceNotExist>\r\n      showdue = <ShowPrincipalDue bank={this.props.bankdetails.accounts[0]}></ShowPrincipalDue>\r\n    }\r\n    if (this.props.bankdetails) {\r\n      const bank = this.props.bankdetails;\r\n      return (<div className=\"hover-card-main\">\r\n        <div>\r\n          <img src={`./assets/${bank.cardimage}`} alt=\"Halifax@2x\" height=\"110px\" />\r\n        </div>\r\n        <div className=\"hover-text-left \">\r\n          <div>\r\n            <div className=\"head\">Banks</div>\r\n            <div>{bank.bankName}</div>\r\n          </div>\r\n          {minbalance}\r\n        </div>\r\n        <div className=\"hover-text-right\">\r\n          {showdue}\r\n          <div>\r\n            <div className=\"head\">Due Date</div>\r\n            {new Date(\r\n              eval(bank.accounts[0].dueDate)\r\n            ).toDateString()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction MinBalanceExist(props) {\r\n  return (<div>\r\n    <div>\r\n      <div className=\"head\">Credit limit</div>\r\n      <div> &#8356;{props.bank.creditLimit}</div>\r\n    </div>\r\n    <div>\r\n      <div className=\"head\">Available Credit</div>\r\n      <div> &#8356;{props.bank.availableCredit}</div>\r\n    </div>\r\n  </div>)\r\n}\r\n\r\nfunction MinBalanceNotExist(props) {\r\n  return (<div>\r\n    <div className=\"head\">Remaining Full Term</div>\r\n    <div>\r\n      &#8356;{props.bank.remainingFullTerm}\r\n    </div>\r\n  </div>)\r\n}\r\nfunction ShowMinDue(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"head\">Minimum due balance </div>\r\n      <div>&#8356;{props.bank.minBalanceDue}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ShowPrincipalDue(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"head\">Principal Due</div>\r\n      <div>&#8356;{props.bank.totalBalanceDue}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default CreditHover;",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":188,"column":35,"nodeType":"42","messageId":"43","endLine":188,"endColumn":39},{"ruleId":"36","replacedBy":"44"},{"ruleId":"38","replacedBy":"45"},{"ruleId":"40","severity":1,"message":"41","line":34,"column":15,"nodeType":"42","messageId":"43","endLine":34,"endColumn":19},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-eval","eval can be harmful.","CallExpression","unexpected",["46"],["47"],"no-global-assign","no-unsafe-negation"]